{"version":3,"sources":["SortingVisualizer.js","App.js","SortingAlgos.js","serviceWorker.js","index.js"],"names":["RandomArray","array","className","map","element","key","id","style","height","value","App","useState","arr","setArr","addRandomNum","random","Math","floor","prevArr","replace","c","r","toString","getAnimations","left","right","algo","animations","console","log","mergeSort","mid","l","m","i","j","k","L","R","animation","compare","swap","push","merge","length","temp","bubbleSort","animate","newAnimations","arrayBars","document","getElementsByClassName","barOneIndex","barTwoIndex","barOneStyle","barTwoStyle","color","setTimeout","backgroundColor","newHeight","mergeSortAnimation","barOneHeight","barTwoHeight","bubbleSortAnimation","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.26895ae5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Element from \"./Elements\";\nimport \"./SortingVisualizer.css\";\n\nfunction RandomArray({ array }) {\n  return (\n    <div className=\"array-container\">\n      {array.map((element) => (\n        <div\n          className=\"array-bar\"\n          key={element.id}\n          style={{ height: `${element.value}px` }}\n        ></div>\n      ))}\n    </div>\n  );\n}\n\nexport default RandomArray;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RandomArray from \"./SortingVisualizer\";\nimport { mergeSort, bubbleSort } from \"./SortingAlgos\";\n\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nvar ARRAY_LENGTH = 300;\nvar LEFT = 0;\nvar RIGHT = 299;\nvar testArr = [\n  { key: 0, value: 38 },\n  { key: 1, value: 27 },\n  { key: 2, value: 43 },\n  { key: 3, value: 3 },\n  { key: 4, value: 9 },\n  { key: 5, value: 82 },\n  { key: 6, value: 10 },\n];\n\nfunction App() {\n  const [arr, setArr] = useState([]);\n\n  function addRandomNum() {\n    var min = 5;\n    var max = 500;\n    var random;\n    random = Math.floor(Math.random() * (max - min + 1)) + min;\n    setArr((prevArr) => {\n      return [...prevArr, { id: uuidv4(), value: random }];\n    });\n  }\n\n  function getRandomArray() {\n    setArr([]);\n    for (let i = 0; i < ARRAY_LENGTH; i++) {\n      addRandomNum();\n    }\n    //console.log(\"created arr\");\n    //console.log(arr);\n  }\n\n  function getAnimations(array, left, right, algo) {\n    const animations = [];\n    console.log(algo);\n    if (algo === \"MergeSort\") {\n      mergeSort(array, left, right, animations);\n    } else if (algo === \"BubbleSort\") {\n      console.log(array);\n      bubbleSort(array, animations);\n    }\n    return animations;\n  }\n\n  function animate(algo) {\n    const animations = getAnimations(arr, LEFT, RIGHT, algo);\n    //const animations = getAnimations(testArr, 0, 6);\n    //console.log(animations);\n    console.log(arr);\n    if (algo === \"MergeSort\") {\n      mergeSortAnimation(animations);\n    } else if (algo === \"BubbleSort\") {\n      bubbleSortAnimation(animations);\n    }\n  }\n\n  function mergeSortAnimation(animations) {\n    const newAnimations = [];\n    for (const animation of animations) {\n      newAnimations.push(animation.compare);\n      newAnimations.push(animation.compare);\n      newAnimations.push(animation.swap);\n    }\n    for (let i = 0; i < newAnimations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const comparing = i % 3 !== 2;\n      if (comparing) {\n        const [barOneIndex, barTwoIndex] = newAnimations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        const color = i % 3 === 0 ? \"blue\" : \"lightpink\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * 5);\n      } else {\n        setTimeout(() => {\n          const [barOneIndex, newHeight] = newAnimations[i];\n          const barOneStyle = arrayBars[barOneIndex].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * 5);\n      }\n    }\n    //console.log(\"after animations\");\n    //console.log(arr);\n  }\n\n  function bubbleSortAnimation(animations) {\n    const newAnimations = [];\n    for (const animation of animations) {\n      newAnimations.push(animation.compare);\n      newAnimations.push(animation.compare);\n      newAnimations.push(animation.swap);\n    }\n    for (let i = 0; i < newAnimations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const comparing = i % 3 !== 2;\n      if (comparing) {\n        const [barOneIndex, barTwoIndex] = newAnimations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        const color = i % 3 === 0 ? \"blue\" : \"lightpink\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * 5);\n      } else {\n        setTimeout(() => {\n          const [barOneIndex, barTwoIndex] = newAnimations[i - 1];\n          const [barOneHeight, barTwoHeight] = newAnimations[i];\n          if (barOneHeight.value != -1 && barTwoHeight.value != -1) {\n            /*if it is a valid swap*/\n            const barOneStyle = arrayBars[barOneIndex].style;\n            const barTwoStyle = arrayBars[barTwoIndex].style;\n            barOneStyle.height = `${barTwoHeight.value}px`;\n            barTwoStyle.height = `${barOneHeight.value}px`;\n          }\n        }, i * 5);\n      }\n    }\n  }\n\n  function checkArray() {\n    console.log(\"check arr\");\n    console.log(arr);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Sorting Algorithm Visualizer</h1>\n      <button className=\"arraybutton\" onClick={getRandomArray}>\n        Create Random Array\n      </button>\n      <button\n        className=\"arraybutton\"\n        onClick={function () {\n          /*mergeSort(arr, LEFT, RIGHT);*/\n          animate(\"MergeSort\");\n        }}\n      >\n        Mergesort\n      </button>\n      <button\n        className=\"arraybutton\"\n        onClick={function () {\n          animate(\"BubbleSort\");\n        }}\n      >\n        Bubble Sort\n      </button>\n      <RandomArray array={arr} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\n\nexport const merge = (array, l, m, r, animations) => {\n  var i, j, k;\n  var left = m - l + 1;\n  var right = r - m;\n\n  /*create temp arrays*/\n\n  var L = []; //array.slice(l, m);\n  var R = []; //array.slice(m + 1, r);\n\n  /*copy data*/\n  for (let i = 0; i < left; i++) {\n    L[i] = array[l + i];\n  }\n  for (let j = 0; j < right; j++) {\n    R[j] = array[m + 1 + j];\n  }\n\n  /*merge*/\n  i = 0;\n  j = 0;\n  k = l;\n  while (i < left && j < right) {\n    const animation = {};\n    animation.compare = [l + i, m + j];\n    if (L[i].value <= R[j].value) {\n      array[k] = L[i];\n      animation.swap = [k, L[i].value];\n      i++;\n    } else {\n      array[k] = R[j];\n      animation.swap = [k, R[j].value];\n      j++;\n    }\n    k++;\n    animations.push(animation);\n  }\n  while (i < left) {\n    const animation = {};\n    animation.compare = [l + i, l + i];\n    animation.swap = [k, L[i].value];\n    animations.push(animation);\n    array[k] = L[i];\n    i++;\n    k++;\n  }\n  while (j < right) {\n    const animation = {};\n    animation.compare = [m + j, m + j];\n    animation.swap = [k, R[j].value];\n    animations.push(animation);\n    array[k] = R[j];\n    j++;\n    k++;\n  }\n};\n\nexport const mergeSort = (array, left, right, animations) => {\n  if (left < right) {\n    var mid = Math.floor(left + (right - left) / 2);\n    mergeSort(array, left, mid, animations);\n    mergeSort(array, mid + 1, right, animations);\n    merge(array, left, mid, right, animations);\n  }\n  //setArr(array);\n};\n\nexport const bubbleSort = (array, animations) => {\n  for (var i = 0; i < array.length - 1; i++) {\n    for (var j = 0; j < array.length - i - 1; j++) {\n      const animation = {};\n      animation.compare = [j, j + 1];\n\n      if (array[j].value > array[j + 1].value) {\n        animation.swap = [array[j], array[j + 1]];\n        var temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      } else {\n        animation.swap = [-1, -1];\n      }\n      animations.push(animation);\n    }\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}